{
  "enabled": true,
  "forkProcessing": "enabled",
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
      ":dependencyDashboard",
      "config:base",
      "helpers:pinGitHubActionDigests",
      ":semanticCommits",
      ":semanticCommitTypeAll(chore)"
  ],
  "reviewersFromCodeOwners": false,
  "timezone": "America/New_York",
  "rebaseStalePrs": true,
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  "suppressNotifications": ["prIgnoreNotification"],
  "pre-commit": {
      "enabled": true
  },
  "helm-values": {
      "fileMatch": [".*\\.ya?ml$"]
  },
  "kubernetes": {
      "fileMatch": [".*\\.ya?ml$"],
      "ignorePaths": [
          ".github"
      ]
  },
  "hostRules": [
      {
          "matchHost": "registry1.dso.mil",
          "hostType": "docker",
          "description": "Encrypted creds for registry1, scoped to this Github org using: https://github.com/renovatebot/renovate/blob/main/docs/usage/configuration-options.md#encrypted",
          "encrypted": {
          "username": "wcFMA/xDdHCJBTolAQ//QdIPbsh+aThsIpTWu0DthS6RVA6wocOrBwJFtorYA+r8cdPstKvWoM1AGKwBpyeybkeCXYgZKe9bdT+F0S5D2JiPUg4UWAzqfSNTfBdZ3ROwpfKU8CK70hrWnfn/78UhoQ6mH8xGm74v/UoVL4VWsIU1Apmx6CANQnW1AolVCiaX66NZ1YRJr7GWDZiDeZ5RVX0H9q68LUwX8czv4HfGIwBsoykqAgncDofIMRv2RYHay38QbAKFil8ZH6dgvHPpvb9hzpq22ofBiWZ3FjZa26SMZuw7P4gPh3u2Poidn92CrUQL4uM5Tw58u4SNmxYAgJzpOXAAByXtwblaLyInQw6ardu4IVb+UXZKzAxYKhuk73drxVjux+rQO8xKTQZKY105UxS6+wyvjx/HfqRZdLG2jbJFRleMOMzGzToQMS0sK5YpCUJUU++zZNy5SAPUGsoZL2254B4SfgEBclz5Ncm2cgT45VkFwK1RhSxHoskPQW3ZhAAFfeEYoS+FZVaJxqyqUznClfvKMRAV35tChkTXZTpG0FCdUTABj02tIiBWpIdAvVXCaEInvmqGSeQNU5i9UleVeKZcCMbdHs1JEsmICf0dk77sXgI4k2eoJIEaClIDTmEd3K8IKGIowKyHKdSjbgw9v6ExzLc8V2kwx221S3idFkKQHzZDoQCrbSvSYgH6O04Bug1saZeq+PcAc02kiyYl1q5gQkXhWn9uniucctVx3RDYWlPdApPuTsf1bdIpauyTC4Ylsb20rYOuBVjdibTXt0nkN6Nxzy9LHHA9jrSCi25pegPWwwjDo9oOxpUx",
          "password": "wcFMA/xDdHCJBTolAQ/7BzIvWPX57V843FmhDMzXCHrQldPHrwE2TotQMTCkoagJTGAks35rSrU6D01c2MUYwgh65FgZm6WZQ+2QU3F0hNsqEOFIAWNXczw5zlGKjuNInKQlsnRsCjIRynXZ8IH9MEBZAuMF+baMOp0Oo+3xflEGbKCPKvE+2S5hV/Rcb37rMsFSPx2a5qviARN049OAdf78Osr2TG+Wi36eS50pwir1YmidVD2L4FtmnsU958PNa0nVpvWLKlMhjGbfotwpYNDvZp63O/21NWvLoGR1D4c7cgCcn29DUPiq1eQ2F1Ai+wWVQEyc2inVBKRDRd1/9GWcjSZepX+NTQh9xiP5nnuyoImJuvPly1dAI8UwOvGvmMRfeo/dbphzJSugE9wrDrymXTwlfFHGHYAnXbowvSi7gPxbWXvHRr/lHNQJ8rjr3olm3no2svZa8fxqj+6t1phGU+0TQ4LQb8liVw5/G8s/3Xk8f09KaqGpNNk8WzbEF1xW4O9yg/Y0fU6O6irbQLrCcXAinA/7rLQ9pBUGUfZHnaY5K/HBNrKZke+mMjYah+cXQ7nFX2zUFKe6w4zasJk2r8jCu08EBKPrfeHNeZj1ST4OEQPJe9VTMOED5A2Nkq7zkwkYAy7GZtCQ4VjPR/W423lOGDkif+MjApj4nxwwnQjmn/26ApSWN6BHmJXSXQENpwjUjy5MvHtEdjhBt6y2d9JuxrdwU0PN4JcZ307jk8gMHBNm/oRPt18o59K8k205+BbivC5Ux5rZyF22dzsw68kjUWv68Ov9tBNkMxw7Tciw6WojZX2ma+wPOA"
          }
      }
  ],
  "regexManagers": [
      {
          "fileMatch": [".*(\\.ya?ml|\\.json)$"],
          "matchStrings": [
              "https:\\/\\/raw\\.githubusercontent\\.com\\/(?<depName>[^\\/]+\\/[^\\/]+)\\/(?<currentValue>[^\\/]+)"
          ],
          "versioningTemplate": "semver-coerced",
          "datasourceTemplate": "github-tags"
      },
      {
          "fileMatch": [".*(\\.ya?ml|\\.json)$"],
          "matchStrings": [
              "npm install ([\\w\\- ]+ )?(?<depName>@?[^\\s]*?)@(?<currentValue>[^\\s]+)"
          ],
          "datasourceTemplate": "npm"
      },
      {
          "fileMatch": [".*\\.ya?ml$"],
          "matchStrings": [
              "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*:\\s*['\"]?(?<currentValue>[v0-9].*?)['\"]?(\\s|$)"
          ],
          "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}",
          "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}"
      },
      {
          "fileMatch": [".*\\.ya?ml$", ".*\\.sh$"],
          "matchStrings": [
              "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?( registryUrl=(?<registryUrl>.*?))?\\s.*[A-Z]+=['\"]?(?<currentValue>[v0-9].*?)['\"]?(\\s|$)"
          ],
          "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}",
          "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}"
      },
      {
          "fileMatch": [".*\\.ya?ml$"],
          "matchStrings": [
              "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*brew.*@\\s*['\"]?(?<currentValue>[v0-9].*?)['\"]?(\\s|$)"
          ],
          "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver-coerced{{/if}}",
          "extractVersionTemplate": "^v(?<version>.*)$"
      },
      {
          "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
          "matchStrings": [
              "- ['\"]?(?<depName>[^\"'\\s]+):(?<currentValue>[^\"'\\s]+)['\"]?( # renovate:( versioning=(?<versioning>.*?))?( extractVersion=(?<extractVersion>.*?))?)?(\\s|$)"
          ],
          "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}docker{{/if}}",
          "extractVersionTemplate": "{{#if extractVersion}}{{{extractVersion}}}{{else}}^(?<version>.*)${{/if}}",
          "datasourceTemplate": "docker"
      },
      {
          "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
              "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
              "(?m)name: [\"']?(?<depName>.+?)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$(.|\\n)*?url: [\"']?(?<registryUrl>.+?)[\"']?$"
          ],
          "datasourceTemplate": "helm"
      },
      {
          "fileMatch": [ "(^|/)zarf.yaml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
              "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
              "(?m)name: [\"']?(?<depName>.+?)[\"']?$(.|\\n)*?url: [\"']?(?<registryUrl>.+?)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$"
          ],
          "datasourceTemplate": "helm"
      },
      {
          "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
              "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
              "(?m)name:(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$(.|\\n)*?url: [\"']?(?<depName>.+?\\.git)[\"']?$"
          ],
          "datasourceTemplate": "git-tags",
          "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(-[\\w\\.]+\\.(?<build>\\d+))?"
      },
      {
          "fileMatch": [ "(^|/)zarf.yaml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
              "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
              "(?m)name:(.|\\n)*?url: [\"']?(?<depName>.+?\\.git)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$"
          ],
          "datasourceTemplate": "git-tags",
          "versioningTemplate": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(-[\\w\\.]+\\.(?<build>\\d+))?"
      },
      {
          "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
              "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
              "(?m)name:(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$(.|\\n)*?url: [\"']?oci:\\/\\/(?<depName>.+?)[\"']?$"
          ],
          "datasourceTemplate": "docker"
      },
      {
          "fileMatch": [ "(^|/)zarf.yaml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)charts:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
              "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
              "(?m)name:(.|\\n)*?url: [\"']?oci:\\/\\/(?<depName>.+?)[\"']?$(.|\\n)*?version: [\"']?(?<currentValue>.+?)[\"']?$"
          ],
          "datasourceTemplate": "docker"
      },
      {
          "fileMatch": [ "(^|/)zarf\\.ya?ml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)manifests:(.|\\n)*?(^\\s{4}[\\w:]+|\\n$|^\\s{2}-)",
              "(?m)name:(.|\\n)+?(^\\s{4}[\\w\\-:]+|\\n$|^\\s{2}-|^\\s{6}-)",
              "(?m)name:(.|\\n)*?kustomizations:(.|\n)*?- [\"']?github.com\\/(?<depName>.+?)\\/\\/.*\\?ref=(?<currentValue>.+?)[\"']?$"
          ],
          "versioningTemplate": "semver-coerced",
          "datasourceTemplate": "github-tags"
      },
      {
          "fileMatch": [ "(^|/)uds-bundle.yaml$" ],
          "matchStringsStrategy": "recursive",
          "matchStrings": [
              "(?m)repository: [\"']?(?<depName>.+?)[\"']?$(.)*(\n.*){0,2}ref: [\"']?(?<currentValue>.+?)[\"']?$"
          ],
          "datasourceTemplate": "docker"
      }
  ],
  "packageRules": [
      {
          "matchPackageNames": ["registry1.dso.mil/ironbank/big-bang/base"],
          "allowedVersions": "!/8.4/"
      },
      {
          "matchFileNames": ["src/istio/**"],
          "groupName": "istio",
          "commitMessageTopic": "istio"
      },
      {
          "matchFileNames": ["src/promtail/**"],
          "groupName": "promtail",
          "commitMessageTopic": "promtail"
      },
      {
          "matchFileNames": ["src/velero/**"],
          "groupName": "velero",
          "commitMessageTopic": "velero"
      },
      {
          "matchFileNames": ["src/tempo/**"],
          "groupName": "tempo",
          "commitMessageTopic": "tempo"
      },
      {
          "matchFileNames": ["src/prometheus-stack/**"],
          "groupName": "prometheus-stack",
          "commitMessageTopic": "prometheus-stack"
      },
      {
          "matchFileNames": ["src/neuvector/**"],
          "groupName": "neuvector",
          "commitMessageTopic": "neuvector"
      },
      {
          "matchFileNames": ["src/metrics-server/**"],
          "groupName": "metrics-server",
          "commitMessageTopic": "metrics-server"
      },
      {
          "matchFileNames": ["src/loki/**"],
          "groupName": "loki",
          "commitMessageTopic": "loki"
      },
      {
          "matchFileNames": ["src/kiali/**"],
          "groupName": "kiali",
          "commitMessageTopic": "kiali"
      },
      {
          "matchFileNames": ["src/keycloak/**"],
          "groupName": "keycloak",
          "commitMessageTopic": "keycloak"
      },
      {
          "matchFileNames": ["src/grafana/**"],
          "groupName": "grafana",
          "commitMessageTopic": "grafana"
      },
      {
          "matchPackageNames": ["defenseunicorns/zarf"],
          "groupName": "zarf",
          "commitMessageTopic": "zarf"
      },
      {
          "matchPackageNames": ["defenseunicorns/uds-cli"],
          "groupName": "uds",
          "commitMessageTopic": "uds"
      },
      {
          "matchPackageNames": ["defenseunicorns/uds-k3d"],
          "groupName": "uds-k3d",
          "commitMessageTopic": "uds-k3d"
      },
      { 
          "matchFileNames": [".github/**"],
          "excludePackageNames": ["defenseunicorns/zarf","defenseunicorns/uds-cli"],
          "groupName": "githubactions",
          "commitMessageTopic": "githubactions",
          "pinDigests": true
      },
      {
          "matchFileNames": ["package.json", "package-lock.json", "tasks/create.yaml"],
          "groupName": "pepr",
          "commitMessageTopic": "pepr"
      }
  ]
}